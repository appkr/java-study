version: '3'

services:

  mysql:
    image: mysql:5.7.32
    platform: linux/amd64
    container_name: mysql
    volumes:
      - $HOME/mysql_data:/var/lib/mysql/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=secret
    ports:
      - 3306:3306
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test: mysql -uroot -e 'SELECT 1' || exit 1
      interval: 60s

  # How to start a cluster including "jhipster-uaa"
  #
  #   o Download and unzip jhipster-uaa from https://github.com/appkr/msa-starter/raw/master/jhipster-uaa.zip
  #   o Build "jhipster-uaa" docker image
  #     ~/jhipster-uaa $ ./gradlew clean jibDockerBuild -Djib.to.image=jhipster-uaa -Djib.to.tags=latest
  #   o If it fails because of docker hub auth, provide more option to the command
  #     ~/jhipster-uaa $ ... -Djib.from.auth.username={USERNAME} -Djib.from.auth.password={PASSWORD}
  jhipster-uaa:
    image: jhipster-uaa:latest
    container_name: jhipster-uaa
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/jhipster_uaa?useUnicode=true&characterEncoding=utf8&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: secret
    ports:
      - 9999:9999
    depends_on:
      - mysql
    healthcheck:
      test: curl -s http://localhost:9999/management/health || exit 1

  grpc-demo-server:
    image: grpc-demo-server:latest
    container_name: grpc-demo-server
    environment:
      SECURITY_OAUTH2_CLIENT_ACCESSTOKENURI: http://jhipster-uaa:9999/oauth/token
      SECURITY_OAUTH2_CLIENT_USERAUTHORIZATIONURI: http://jhipster-uaa:9999/oauth/token
      SECURITY_OAUTH2_RESOURCE_JWK_KEYSETURI: http://jhipster-uaa:9999/.well-known/jwks.json
    ports:
      - 8081:8081
      - 8090:8090
    depends_on:
      - jhipster-uaa
    healthcheck:
      test: curl -s http://localhost:8081/actuator/health || exit 1

  grpc-demo-client:
    image: grpc-demo-client:latest
    container_name: grpc-demo-client
    environment:
      GRPC_CLIENT_HELLOSERVICE_ADDRESS: static://grpc-demo-server:8090
      SECURITY_OAUTH2_CLIENT_ACCESSTOKENURI: http://jhipster-uaa:9999/oauth/token
      SECURITY_OAUTH2_CLIENT_USERAUTHORIZATIONURI: http://jhipster-uaa:9999/oauth/token
      SECURITY_OAUTH2_RESOURCE_JWT_KEYURI: http://jhipster-uaa:9999/oauth/token_key
    ports:
      - 8080:8080
    depends_on:
      - jhipster-uaa
    healthcheck:
      test: curl -s http://localhost:8080/actuator/health || exit 1