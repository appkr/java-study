plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
    id 'io.freefair.lombok' version '6.6.2'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

allprojects {
    group = 'dev.appkr'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
        systemProperty('spring.profiles.active', 'test')
        systemProperty('user.timezone', 'Asia/Seoul')
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.freefair.lombok'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    bootJar.enabled = false
    jar.enabled = true
}

dependencies {
    implementation platform('org.springframework.cloud:spring-cloud-dependencies:2022.0.1')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation project(':shared')
    implementation project(':module1')
    implementation project(':module2')
}

jib {
    from {
        image = 'amazoncorretto:17-alpine-jdk'
    }

    to {
        image = project.name
        tags = ['latest', project.version]
    }

    containerizingMode = 'packaged'

    container {
        jvmFlags = [
                '-XX:+UseContainerSupport',
                '-XX:+UseG1GC',
                '-XX:+HeapDumpOnOutOfMemoryError',
                '-XX:HeapDumpPath=/tmp',
                '-Djava.net.preferIPv4Stack=true',
                '-Duser.timezone=Asia/Seoul',
                '-Dfile.encoding=UTF8',
                '-Dsun.net.inetaddr.ttl=30'
        ]
        ports = ['8080']
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
}
